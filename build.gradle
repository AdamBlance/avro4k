buildscript {

    ext.isTravis = System.getenv("TRAVIS") == "true"
    ext.travisBuildNumber = System.getenv("TRAVIS_BUILD_NUMBER")
    ext.isReleaseVersion = !isTravis

    ext.kotlin_version = '1.3.50'
    ext.serializationVersion = "0.13.0"
    ext.avroVersion = "1.90.1"
    ext.kotlinTestVersion = "3.4.1"

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.40'
}


apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'kotlinx-serialization'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "com.sksamuel.avro4k"

if (isTravis) {
    version "0.10.0" + travisBuildNumber + "-SNAPSHOT"
} else {
    version "0.10.0"
}

task javadocJar(type: Jar) {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    // from sourceSets.main.kotlin
    archiveClassifier = 'sources'
}

tasks.withType(Javadoc) {
    onlyIf { isReleaseVersion }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializationVersion"
    compile 'org.apache.avro:avro:1.9.1'
    testCompile "io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion"
    testCompile "io.kotlintest:kotlintest-assertions:$kotlinTestVersion"
    testCompile "io.kotlintest:kotlintest-assertions-json:$kotlinTestVersion"
}

test {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

publishing {
    repositories {
        maven {

            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"

            name 'deploy'

            url = isTravis ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = System.getenv("OSSRH_USERNAME") ?: ossrhUsername
                password = System.getenv("OSSRH_PASSWORD") ?: ossrhPassword
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {

            from components.java

            if (isReleaseVersion) {
                artifact sourcesJar
                artifact javadocJar
            }

            pom {
                name = 'avro4k'
                description = 'Avro format support for kotlinx.serialization'
                url = 'http://www.github.com/sksamuel/avro4k'

                scm {
                    connection = 'scm:git:http://www.github.com/sksamuel/avro4k'
                    developerConnection = 'scm:git:http://github.com/sksamuel'
                    url = 'http://www.github.com/sksamuel/avro4k'
                }

                licenses {
                    license {
                        name = 'The Apache 2.0 License'
                        url = 'https://opensource.org/licenses/Apache-2.0'
                    }
                }

                developers {
                    developer {
                        id = 'sksamuel'
                        name = 'Stephen Samuel'
                        email = 'sam@sksamuel.com'
                    }
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
